services:
  redis:
    image: redis:7
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  ingestion-api:
    build:
      context: .
      args:
        INSTALL_ML: 0
    # If you publish a built image later, you can replace the above with:
    # image: algo-data-ingestion:latest
    env_file:
      - .env
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_URL=redis://redis:6379/0
      - FEATURE_NAMESPACE=features
      - FEATURE_TTL_SEC=3600
      - ML_SENTIMENT_ENABLED=0
      - SENTIMENT_MODEL_ID=distilbert/distilbert-base-uncased-finetuned-sst-2-english
      - ML_MAX_WORKERS=4
      - HF_HOME=/app/.cache/huggingface
      - SOCIAL_SENTIMENT_ENRICH=0
    volumes:
      - ./data_lake:/app/data_lake
      - hf-cache:/app/.cache/huggingface
    ports:
      - "8000:8000"
    depends_on:
      redis:
        condition: service_healthy
    command: >
      uvicorn app.ingestion_service.main:app
      --host 0.0.0.0
      --port 8000
      --workers 1
    restart: unless-stopped

  redis-exporter:
    image: oliver006/redis_exporter:v1.62.0
    command:
      - "--redis.addr=redis://redis:6379"
    ports:
      - "9121:9121"
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring:/etc/prometheus:ro
      - prometheus-data:/prometheus
    depends_on:
      ingestion-api:
        condition: service_started
    command: [ "--config.file=/etc/prometheus/prometheus.yml",
               "--storage.tsdb.path=/prometheus",
               "--web.enable-lifecycle" ]
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./monitoring/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./monitoring/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
    depends_on:
      prometheus:
        condition: service_started
    restart: unless-stopped

  scheduler:
    build:
      context: .
      args:
        INSTALL_ML: 0
    command: python -m app.scheduler.main
    depends_on:
      ingestion-api:
        condition: service_started
    env_file:
      - .env
    environment:
      - API_BASE_URL=http://ingestion-api:8000
      - ADMIN_TOKEN=${ADMIN_TOKEN}
      - RUN_ON_START=1
      - SCHED_TZ=UTC
      - SCHED_METRICS_PORT=9002
      - MARKET_JOBS=[
          {"exchange":"binance","symbol":"BTC/USDT","timeframe":"1m","lookback_minutes":60,"cron":"*/5 * * * *"},
          {"exchange":"binance","symbol":"BTC/USDT","timeframe":"5m","lookback_minutes":360,"cron":"*/15 * * * *"},
          {"exchange":"binance","symbol":"ETH/USDT","timeframe":"1m","lookback_minutes":60,"cron":"*/5 * * * *"}
        ]
      - MARKET_INGEST_JOBS=[
          {"exchange":"binance","symbol":"BTC/USDT","timeframe":"1m","limit":500,"cron":"*/10 * * * *"},
          {"exchange":"binance","symbol":"ETH/USDT","timeframe":"1m","limit":500,"cron":"*/10 * * * *"}
        ]
      - TTL_SWEEP_CRON=*/15 * * * *
      - TTL_SWEEP_PATTERN=features:market:*
      - TTL_SWEEP_TTL=3600
    ports:
      - "9002:9002"
    restart: unless-stopped

volumes:
  redis-data: {}
  prometheus-data: {}
  hf-cache: {}
